// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sorigin;

#nullable disable

namespace Sorigin.Migrations
{
    [DbContext(typeof(SoriginContext))]
    partial class SoriginContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sorigin.Models.Media", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Contract")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contract");

                    b.Property<string>("FileHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_hash");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("file_size");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mime_type");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<Instant>("Uploaded")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("uploaded");

                    b.HasKey("ID")
                        .HasName("pk_media");

                    b.HasIndex("Contract")
                        .HasDatabaseName("ix_media_contract");

                    b.HasIndex("FileHash")
                        .HasDatabaseName("ix_media_file_hash");

                    b.ToTable("media", (string)null);
                });

            modelBuilder.Entity("Sorigin.Models.User", b =>
                {
                    b.Property<decimal>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("id");

                    b.Property<string>("Country")
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<Instant>("LastLogin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_login");

                    b.Property<Guid>("ProfilePictureMediaID")
                        .HasColumnType("uuid")
                        .HasColumnName("profile_picture_media_id");

                    b.Property<Instant>("Registration")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registration");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("ID")
                        .HasName("pk_users");

                    b.HasIndex("ID")
                        .HasDatabaseName("ix_users_id");

                    b.HasIndex("ProfilePictureMediaID")
                        .HasDatabaseName("ix_users_profile_picture_media_id");

                    b.HasIndex("Username")
                        .HasDatabaseName("ix_users_username");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Sorigin.Models.User", b =>
                {
                    b.HasOne("Sorigin.Models.Media", "ProfilePictureMedia")
                        .WithMany()
                        .HasForeignKey("ProfilePictureMediaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_users_media_profile_picture_media_id");

                    b.Navigation("ProfilePictureMedia");
                });
#pragma warning restore 612, 618
        }
    }
}
